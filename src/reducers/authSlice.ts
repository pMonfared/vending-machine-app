import { createSlice, PayloadAction } from "@reduxjs/toolkit";

// Define the shape of the AuthState
export interface AuthState {
  user: object | null;
  token: string | null;
}

// Initial state for the AuthState
const initialState: AuthState = {
  user: null,
  token: null,
};

// Create a Redux slice for authentication
const authSlice = createSlice({
  name: "auth", // Name of the slice
  initialState, // Initial state
  reducers: {
    // Define reducer functions for actions
    // Use the PayloadAction type to declare the contents of `action.payload`
    login: (state, action: PayloadAction<AuthState>) => {
      // Update the state with user and token from the action payload
      state.user = action.payload.user;
      state.token = action.payload.token;
    },
    logout: (state) => {
      // Clear user and token from the state when logging out
      state.user = null;
      state.token = null;
    },
  },
});

// Export the actions created by the slice
export const { login, logout } = authSlice.actions;

// Export the reducer function generated by the slice
export default authSlice.reducer;
